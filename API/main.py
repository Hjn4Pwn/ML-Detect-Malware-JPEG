import warnings
from flask import Flask, request, jsonify
import pickle
import numpy as np
from utils.features_extraction import JPEG
from sklearn.exceptions import InconsistentVersionWarning

warnings.simplefilter("ignore", InconsistentVersionWarning)

app = Flask(__name__)

models = [
    pickle.load(open("models/dt.pkl", "rb")),
    pickle.load(open("models/lgbm.pkl", "rb")),
    pickle.load(open("models/rf.pkl", "rb")),
    pickle.load(open("models/xgb.pkl", "rb"))
]

@app.route('/predict', methods=['POST'])
def predict():
    if 'file' not in request.files:
        return jsonify({'error': 'No file provided'}), 400

    file = request.files['file']
    if file.filename == '':
        return jsonify({'error': 'No file selected'}), 400

    try:
        file_path = f"/tmp/{file.filename}"
        file.save(file_path)
        
        image = JPEG(file_path)
        data = image.decode()
        data = np.reshape(data, (1, -1))

        predictions = [model.predict(data)[0] for model in models]
        
        malicious_votes = sum(predictions)
        result = "malicious" if malicious_votes >= 2 else "benign"
        
        return jsonify({'result': result}), 200
    except Exception as e:
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)
